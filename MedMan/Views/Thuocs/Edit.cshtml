@model sThuoc.Models.Thuoc

@{@Html.DisplayFor(model => model.NhomThuoc.TenNhomThuoc, new { @class = "display-mode" })
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thuoc</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ThuocId)
        <div class="form-group">
            @Html.LabelFor(model => model.MaThuoc, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.MaThuoc)
                </span>
                @Html.EditorFor(model => model.MaThuoc, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.MaThuoc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MaNhomThuoc, "MaNhomThuoc", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">@Html.DisplayFor(model => model.NhomThuoc.TenNhomThuoc)</span>
                @Html.DropDownListFor(model => model.MaNhomThuoc, ViewBag.MaNhomThuoc as SelectList, "---Chọn nhóm thuốc---", htmlAttributes: new { @class = "form-control" })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.MaNhomThuoc, "Bạn phải chọn nhóm thuốc", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TenThuoc, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.TenThuoc)
                </span>
                @Html.EditorFor(model => model.TenThuoc, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.TenThuoc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ThongTin, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.ThongTin)
                </span>
                @Html.EditorFor(model => model.ThongTin, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.ThongTin, "", new { @class = "text-danger" })
            </div>
        </div>        
        <div class="form-group">
            @Html.LabelFor(model => model.GiaNhap, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.GiaNhap)
                </span>
                @Html.EditorFor(model => model.GiaNhap, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.GiaNhap, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GiaBanBuon, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.GiaBanBuon)
                </span>
                @Html.EditorFor(model => model.GiaBanBuon, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.GiaBanBuon, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GiaBanLe, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.GiaBanLe)
                </span>
                @Html.EditorFor(model => model.GiaBanLe, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.GiaBanLe, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MaDonViXuat, "MaDonViXuat", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.DonViXuatLe.TenDonViTinh)
                </span>
                @Html.DropDownList("MaDonViXuat", null, htmlAttributes: new { @class = "form-control edit-mode" })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.MaDonViXuat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaDonViThuNguyen, "MaDonViThuNguyen", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.DonViThuNguyen.TenDonViTinh)
                </span>
                @Html.DropDownList("MaDonViThuNguyen", null, htmlAttributes: new { @class = "form-control edit-mode" })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.MaDonViThuNguyen, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HeSo, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.HeSo)
                </span>
                @Html.EditorFor(model => model.HeSo, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.HeSo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SoDuDauKy, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.SoDuDauKy)
                </span>
                @Html.EditorFor(model => model.SoDuDauKy, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.SoDuDauKy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaDauKy, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.GiaDauKy)
                </span>
                @Html.EditorFor(model => model.GiaDauKy, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.GiaDauKy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GioiHan, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.GioiHan)
                </span>
                @Html.EditorFor(model => model.GioiHan, new { htmlAttributes = new { @class = "form-control edit-mode" } })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.GioiHan, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Admin"))
        { <div class="form-group">
            @Html.LabelFor(model => model.MaNhaThuoc, "MaNhaThuoc", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.DropDownList("MaNhaThuoc", null, htmlAttributes: new { @class = "form-control edit-mode" })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.MaNhaThuoc, "", new { @class = "text-danger" })
            </div>
        </div>}
        else
        {@Html.HiddenFor(model => model.MaNhaThuoc, new { @Value = ViewBag.MaNhaThuoc })}

        <div class="form-group">
            @Html.LabelFor(model => model.MaDangBaoChe, "MaDangBaoChe", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.DangBaoChe.TenDangBaoChe)
                </span>
                @Html.DropDownList("MaDangBaoChe", null, htmlAttributes: new { @class = "form-control edit-mode" })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.MaDangBaoChe, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MaNuoc, "MaNuoc", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <span class="display-mode">
                    @Html.DisplayFor(model => model.Nuoc.TenNuoc)
                </span>
                @Html.DropDownList("MaNuoc", null, htmlAttributes: new { @class = "form-control edit-mode" })
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span>@Html.ValidationMessageFor(model => model.MaNuoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var temp = {};
        $(function () {
            $(".edit-mode").hide();
            $(".glyphicon-floppy-disk, .glyphicon-minus-sign").hide();
            $(".glyphicon-pencil").on("click", function () {
                var parent = $(this).parent();
                var input = parent.find('.edit-mode');
                var curVal = "";
                if (!$(input).is("select")) {
                    curVal = input.val();
                } else {
                    curVal = input.find("option:selected").val();
                }
                temp[$(input).attr("id")] = curVal;
                rotateItemShow(parent);
            });
            $(".glyphicon-minus-sign").on("click", function () {
                var parent = $(this).parent();
                var input = parent.find('.edit-mode');
                input.val(temp[$(input).attr("id")]);

                rotateItemShow(parent);
            });
            $(".glyphicon-floppy-disk").on("click", function () {

                var parent = $(this).parent();

                var input = parent.find('.edit-mode');
                var curVal = "";
                if (!$(input).is("select")) {
                    curVal = input.val();
                } else {
                    curVal = input.find("option:selected").text();
                }
                parent.find('span.display-mode').text(curVal);

                rotateItemShow(parent);
            });
            $("#MaDonViXuat, #MaDonViThuNguyen").change(function () {
                if (($("#MaDonViXuat").val()|| null) != null && ($("#MaDonViThuNguyen").val()||null) != null) {
                    if ($("#MaDonViXuat").val() == $("#MaDonViThuNguyen").val()) {
                        app.notice.error("Đơn vị xuất và thứ nguyên không được trùng nhau");
                    }
                }
            });
        });
        function rotateItemShow(parent) {
            parent.find('.edit-mode, .display-mode').toggle();
            parent.find(".glyphicon-pencil, .glyphicon-floppy-disk, .glyphicon-minus-sign").toggle();
        }
    </script>
}