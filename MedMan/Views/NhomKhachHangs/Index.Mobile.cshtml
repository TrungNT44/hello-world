@using Med.Web.Extensions
@using sThuoc.Models
@using sThuoc.Filter
@using PagedList.Mvc;
@*@model IEnumerable<NhomKhachHang>*@
@model PagedList.IPagedList<NhomKhachHang>

@{
    ViewBag.Title = "Danh mục nhóm khách hàng";
    
}


@{
    var canCreate = FunctionsService.Authorize("NhomKhachHangs","Create",this.GetNhaThuoc());
    var canModify = FunctionsService.Authorize("NhomKhachHangs", "Edit", this.GetNhaThuoc());
    var canDelete = FunctionsService.Authorize("NhomKhachHangs", "Delete", this.GetNhaThuoc());
}
@*@if (canCreate)
{
    <p>
        @Html.ActionLink("Thêm Mới", "Create")
    </p>
}*@
@using (Html.BeginForm("Index", "NhomKhachHangs", FormMethod.Get))
{
    <h4><b>@ViewBag.Title</b></h4>    
    <table class="table">
        <tr>
            <td>
                @*Tên nhóm: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)&nbsp;<input type="submit" value="Tìm" class="btn btn-default" />
                @if (canCreate)
                {
                    @:&nbsp; &nbsp;<input type="button" class="btn btn-default" value="Thêm mới" onclick="location.href='@Url.Action("Create", "NhomKhachHangs")'" />
                }*@
                <div class="input-group">
                    @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control", placeholder = "Tìm theo tên" })
                    <span class="input-group-btn">
                        <button class="btn btn-default btn-finduser" type="submit"><i class="fa fa-search fa-fw"></i></button>
                        <span class="btn-separator"></span>
                        @if (canCreate)
                        {
                            @Html.ActionLink("Thêm Mới", "Create", null, new { @class = "btn btn-primary" })
                        }
                    </span>
                </div><!-- /input-group -->  
            </td>
        </tr>
    </table>
}
<table class="table">
    <tr>     
        <th>
            #
        </th>  
        <th>
            @*@Html.DisplayNameFor(model => model[0].TenNhomKhachHang)*@
            @Html.ActionLink("Nhóm khách hàng", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model[0].GhiChu)
        </th>*@
        @if (canModify||canDelete)
        {
            <th @*style="width: 90px"*@></th>
        }
    </tr>
    @{ var stt = (Model.PageNumber - 1) * 10;}
    @foreach (var item in Model)
    {
        stt++;
        <tr>
            <td>
               @stt
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TenNhomKhachHang)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.GhiChu)
            </td>*@
            @if (canModify)
            {
                <td style="text-align:right">
                    @*@Html.ActionLink("Sửa", "Edit", new { id = item.MaNhomKhachHang })*@         
                    <a href="@Url.Action("Edit", new { id = item.MaNhomKhachHang })"><i class="fa fa-pencil fa-fw"></i></a>           
                    |
                    @if(canDelete)
                    {                        
                        @*@Html.ActionLink("Xóa", "Delete", new { id = item.MaNhomKhachHang })*@
                        <a href="@Url.Action("Delete", new { id = item.MaNhomKhachHang })"><i class="fa fa-trash-o fa-fw"></i></a>         
                    }                    
                </td>
            }
        </tr>
    }

</table>
Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) trong @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
        new
        {
            page,
            sortOrder = ViewBag.CurrentSort,
            currentFilter = ViewBag.CurrentFilter
        }))
