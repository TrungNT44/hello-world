@using Med.Web.Extensions
@using sThuoc.Filter
@using PagedList.Mvc;
@using sThuoc.Models;
@model PagedList.IPagedList<PhieuKiemKe>

@{
    ViewBag.Title = "Danh sách phiếu kiểm kê";
}

<h4><b>@ViewBag.Title</b></h4>

@using (Html.BeginForm("Index", "PhieuKiemKes", FormMethod.Get))
{
    @*<table class="table">
            <tr>
                <td>Tên thuốc</td>
                <td>@Html.TextBox("searchTen", (object)ViewBag.searchTen, new {})
                    <input type="submit" value="Tìm" class="btn btn-default" />
                    @if (this.HasPermisson("PhieuKiemKes", "Create"))
                    {
                        @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-primary" })
                    }
                </td>
            </tr>
            <tr><td colspan="2"></td></tr>
        </table>*@
    <table class="table">
        <tr>
            <td>
                <div class="input-group">
                    @Html.TextBox("searchTen", ViewBag.SearchTen as string, new { @class = "form-control", placeholder = "Tìm phiếu theo tên thuốc..." })
                    <span class="input-group-btn">
                        <button class="btn btn-default btn-finduser" type="submit">Tìm</button>
                        <span class="btn-separator"></span>
                        @if (this.HasPermisson("PhieuKiemKes", "Create"))
                        {
                            @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-primary" })
                        }
                    </span>
                </div><!-- /input-group -->
            </td>
        </tr>
    </table>
}

<table class="table">
    <tr>
        <th>
            #
        </th>
        <th>
            Nhân viên
        </th>
        <th>
            Ngày
        </th>
        <th>SL mã thuốc</th>
        <th style="text-align:right;width:90px">Cân kho</th>
        <th></th>
    </tr>
    @{ var stt = 0;}
    @foreach (var item in Model)
    {
        ++stt;
        <tr>
            <td>
                @stt
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy.TenDayDu)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Created)*@
                @string.Format("{0:dd/MM/yyyy}", item.Created)

            </td>
            <td>
                @item.PhieuKiemKeChiTiets.Count
            </td>
            <td style="text-align : center">
                @if (item.DaCanKho)
                {
                    <i class="glyphicon-check glyphicon text-success"></i>
                }
                else
                {
                    <i class="glyphicon-remove glyphicon text-danger"></i>
                }
            </td>
            <td style="text-align:right">
                @Html.ActionLink("Chi tiết", "details", new { id = item.MaPhieuKiemKe })                
                @if (this.HasPermisson("PhieuKiemKes", "Delete"))
                {
                    <span>|</span>
                    @Html.ActionLink("Xóa", "Delete", new { id = item.MaPhieuKiemKe }, new { @class = "btn-xoa", @data_id = item.MaPhieuKiemKe })
                }
            </td>
        </tr>
    }
</table>
<br />
    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) trong @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
                                                    new
                                                    {
                                                        page,
                                                        currentFilterNgay = ViewBag.CurrentFilterNgay
                                                    }))
    @section Scripts{
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/datepicker-vi.js"></script>
        <script type="text/javascript">
            $(function () {
                //bind date
                var datefield = $(".datefield");
                datefield.removeClass('hasDatepicker');
                datefield.datepicker({
                    dateFormat: "dd/mm/yy",
                    changeMonth: true,
                    changeYear: true,
                    onClose: function () {
                        $(this).parent().parent().find('input.save-thuoc').focus();
                    }
                });

                BindAutocomplete($("#searchTen"), "tenThuoc");
            });
            
            function BindAutocomplete(elem, sName) {
                var url = $('input[name=baseUrl]').val() + "Thuocs/GetThuocsByMaOrTen";
                elem.autocomplete({
                    minLength: 2,
                    source: function (request, response) {
                        var term = request.term;
                        currentTerm = sName + term;
                        $.getJSON(url, request, function (data, status, xhr) {
                            response(data);
                        });
                    },
                    messages: {
                        noResults: "Không tìm thấy"//,
                        // results: ""
                    },
                    select: function (event, ui) {
                        $(this).val(ui.item.label);
                        $('#searchTen').val(ui.item.tenThuoc);
                        
                        return false;
                    }
                }).each(function () {
                    $(this).autocomplete('instance')._renderItem = function (ul, item) {
                        return $("<li>")
                            .append("<a>" + item.desc + "</a>")
                            .append('<input type="hidden" name="price" value="' + item.price + '"/>')
                            .append('<input type="hidden" name="unit" value="' + item.unit + '"/>')
                            .appendTo(ul);
                    };
                });
            }
        </script>
    }