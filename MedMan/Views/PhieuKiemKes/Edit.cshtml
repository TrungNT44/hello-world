@using System.Globalization
@model  sThuoc.Models.PhieuKiemKeEditModel

@{
    ViewBag.Title = "Sửa phiếu kiểm kê";
}
<link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/phieuStyle.css" rel="stylesheet" />
@*<br />*@
@using (Html.BeginForm("Edit", "PhieuKiemKes", FormMethod.Post, new { onkeydown = "return event.keyCode!=13" }))
{
    @Html.AntiForgeryToken()
    <h2 style="font-size: 30px; text-align: center;color: coral"><b>KIỂM KÊ KHO</b></h2>
    <div style="text-align: center;font-size: 15px;padding: 0px">
        <div class="clickable-text daterange-picker daterange-picker"><input type="text" id="inputDatePicker" />Ngày <span id="inputDate" style="width: 10%">@Model.NgayTao.ToString("dd/MM/yyyy")</span></div>
    </div>
    @Html.HiddenFor(model => model.NgayTao, new { @Value = Model.NgayTao.ToString("dd/MM/yyyy HH:mm") })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <br />
    <div class="row">
        <div class="col-md-3">
          
            <fieldset class="">
                <strong>Thêm cả nhóm thuốc vào phiếu</strong>
                <div class="input-group">
                    @Html.DropDownList("MaNhomThuoc", null, optionLabel: "Chọn nhóm thuốc", htmlAttributes: new { @class = "form-control" })
                    <input type="hidden" id="maThuoc" name="maThuoc" />
                    <span class="input-group-btn">
                        <input type="button" value="Thêm" onclick="AddThuocs()" class="btn btn-default" />
                    </span>
                </div>
            </fieldset>
            <br />
            <fieldset class="">
                <label>Thêm từng thuốc vào phiếu</label>
                <div class="control-group">
                    <input type="text" maxlength="20" id="txtByTen" class="form-control" placeholder="Tìm kiếm theo tên thuốc" />
                    <input type="hidden" maxlength="20" id="txtByMa" class="form-control" />
                </div>
            </fieldset>
            <br />
            <fieldset class="">
                <div class="control-group">
                    <input type="checkbox" id="chkBienDong" class="form-control" style="width: 18px;display: inline;height: 18px;vertical-align: bottom;margin-top: 0px;" />
                    <label for="unassigneduser" style="margin-bottom: 0px;font-weight: normal">Thuốc có biến động trong ngày</label>
                </div>
            </fieldset>
            
            <div>
               

                <hr />
                @*<input type="button" value="Quay lại" class="btn btn-default" onclick=" javascript:window.history.go(-1); " />*@
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-default" })
                <input type="submit" value="Lưu phiếu" id="btnLuuPhieu" name="action" class="btn btn-default" />
                @*<br /><br />*@
                <input type="submit" value="Cân kho" id="btnCanKho" name="action" class="btn btn-default" />

                @*<a href="#" value="Cân kho" id="btnCanKho" name="action" class="btn btn-default" onclick="YesNoDialog('dialogCanKho-confirm','@Url.Action("Edit", new { id = item.ThuocId })')"></a>*@

            </div>
        </div>

        <div class="col-md-9">
            <div class="baocao-container">
                @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                {
                    <div class="text-danger text-center errorMessage">
                        <span>@ViewBag.ErrorMessage</span>
                    </div>
                    <br />
                }
                @Html.HiddenFor(model => model.MaPhieuKiemKe)
                <input type="hidden" name="id" value="@Model.MaPhieuKiemKe" />
                <table class="table table-responsive table-bordered" id="tbl">
                    <thead>
                        <tr>
                            <th style="background-color: darkgray">#</th>
                            <th style="background-color: darkgray">Nhóm Thuốc</th>
                            <th style="background-color: darkgray">Mã Thuốc</th>
                            <th style="background-color: darkgray">Tên Thuốc</th>
                            <th style="text-align: right; background-color: darkgray">SL hệ thống</th>
                            <th style="background-color: darkgray">SL thực</th>
                            <th style="background-color: darkgray">Chênh lệch</th>
                            <th style="background-color: darkgray"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ var counter = 0;}
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@(counter + 1)</td>
                                <td>
                                    <input type="hidden" name="Items[@counter].TenNhomThuoc" value="@item.TenNhomThuoc"><span>@item.TenNhomThuoc</span>
                                </td>
                                <td>
                                    <input type="hidden" name="Items[@counter].MaThuoc" value="@item.MaThuoc"><span>@item.MaThuoc</span>
                                </td>
                                <td>
                                    <span>@item.TenThuoc</span>
                                </td>
                                <td style="text-align: right">
                                    <input type="hidden" name="Items[@counter].SoLuongHeThong" value="@sThuoc.Utils.Helpers.FormatDecimal(item.SoLuongHeThong.ToString())"><span class="soluonghethong">@item.SoLuongHeThong</span><span> @item.TenDonViTinhXuatLe</span>
                                </td>
                                <td>
                                    <input type="text" name="Items[@counter].SoLuongThucTe" value="@sThuoc.Utils.Helpers.FormatDecimal(item.SoLuongThucTe.ToString())" class="form-control txt-soluongthucte">
                                </td>
                                <td>
                                    <span class="chenhlech">@sThuoc.Utils.Helpers.FormatDecimal((item.SoLuongHeThong - item.SoLuongThucTe).ToString())</span>
                                </td>
                                <td>
                                    <a class="delete-line text-warning" style="cursor: pointer; display: inline;" title="Xóa"><i class="glyphicon glyphicon-remove"></i></a>
                                </td>
                            </tr>

                            counter++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/datepicker-vi.js"></script>
    <script type="text/javascript">
        function BindNgayTaoPosition() {
            $(document.body).on('click', '.daterange-picker', function (e) {
                var reportDatePicker = $(e.currentTarget).find('input');

                var currDate = moment($("#NgayTao").val(), DEFAULT_MOMENT_DATE_FORMAT).toDate();
                reportDatePicker.datepicker("update", currDate);
                reportDatePicker.datepicker('show');
            });

            $('.daterange-picker input').datepicker({
                format: DEFAULT_DATE_PICKER_FORMAT,
                changeMonth: true,
                changeYear: true,
                endDate: 0,
                maxViewMode: 2,
                defaultDate: new Date(),
                minDate: MIN_PRODUCTION_DATA_DATE,
                language: 'vi',
                autoclose: true
            }).on('changeDate', function (dateEvent) {
                var selectedDate = moment(dateEvent.date).format(DEFAULT_MOMENT_DATE_FORMAT);
                $("#inputDate").text(selectedDate);
                $("#NgayTao").val(selectedDate);
            });
        }
        var cache = {};
        $(document).ready(function () {
            // binding autocomplete
            BindAutocomplete($("#txtByMa"), "maThuoc");
            BindAutocomplete($("#txtByTen"), "tenThuoc");
            BindNgayTaoPosition();
            // thay doi nhom thuoc
            $('#MaNhomThuoc').on('change', function () {
                var val = $(this).val();
                if (val > 0) {
                    $('#txtByMa').val('');
                    $('#txtByTen').val('');
                    $('input[name=maThuoc]').val('');
                }
            });
            // Tinh so luong chenh lech theo so luong thuc te nhap vao
            $('#tbl').on('change keyup', '.txt-soluongthucte', function () {
                var tr = $(this).parents('tr');
                var soLuongHeThong = tr.find('.soluonghethong').text();
                var soLuongThucTe = $(this).val();
                if (!isNaN(soLuongThucTe)) {
                    var chenhLech = soLuongHeThong - soLuongThucTe;
                    tr.find('.chenhlech').text(chenhLech);
                }
            });

            $('#tbl').on('keydown', '.txt-soluongthucte', function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    var inputs = $(this).closest('form').find(':input:visible');
                    inputs.eq(inputs.index(this) + 1).focus();

                }
            });

            $('#tbl').on('click', '.delete-line', function () {
                $(this).parents('tr').remove();
                $('#tbl tbody tr').each(function (index, el) {
                    $(this).find('input').each(function () {
                        if ($(this).attr('name').indexOf('[') > 0) {
                            var name = $(this).attr('name');
                            $(this).attr('name', name.replace(new RegExp("\\[.*\\]", 'gi'), '[' + index + ']'));
                        }
                    });
                });

                $("#tbl tbody tr").each(function (index) {
                    $(this).find("td:first").text(index + 1);
                })
            });

            $("#chkBienDong").on("change", function () {
                BienDongTrongNgay();
            })
        });

        function AddThuocs() {
            var maNhomThuoc = $('#MaNhomThuoc').val();
            var maThuoc = $('#txtByMa').val();
            var ngayTao = $('#NgayTao').val();
            if (maThuoc || maNhomThuoc) {
                var url = $('input[name=baseUrl]').val() + "Thuocs/GetThuocsWithQuantity";
                var exsitingItems = [];
                var exsitingPhieu = [];
                $.get(url, { nhomThuoc: maNhomThuoc, maThuoc: maThuoc, ngayTao: ngayTao }).done(function (data) {
                    $.each(data, function (index, val) {
                        var isExisted = false;
                        // chi them ma thuoc neu chua ton tai trong bang
                        if (val.MaPhieuDaTonTai != "") {
                            exsitingItems.push(val.MaThuoc);
                            exsitingPhieu.push(val.MaPhieuDaTonTai);
                            isExisted = true;
                        } else {
                            var $results = $('#tbl tbody td:nth-child(3)').find(':contains(' + val.MaThuoc + ')').filter(function () {
                                return $(this).text() === val.MaThuoc;
                            });
                            if ($results != null && $results.length > 0) {
                                exsitingItems.push(val.MaThuoc);
                                isExisted = true;
                            }
                        }

                        if (!isExisted) {
                            InsertRow(val);
                        }

                    });
                    if (exsitingPhieu.length > 0) {
                        alert("Mã thuốc đã tồn tại trong danh sách: " + exsitingItems.join(', ') + " của phiếu: " + exsitingPhieu.join(', '));
                    }
                    else if (exsitingItems.length > 0) {
                        alert("Mã thuốc đã tồn tại trong danh sách: " + exsitingItems.join(', '));
                    }

                });
                $('select#MaNhomThuoc').find('option:first').prop('selected', 'selected');
                $('#txtByMa').val('');
                $('#txtByTen').val('');
            }

        }

        function InsertRow(row) {
            var index = $("#tbl tbody").children("tr").length;
            var row = "<tr><td>" + (index + 1) + "</td><td><input type='hidden' name='Items[" + index + "].TenNhomThuoc' value='" + row.TenNhomThuoc + "'/><span>" + row.TenNhomThuoc + "</span></td><td><input type='hidden' name='Items[" + index + "].MaThuoc' value='" + row.MaThuoc + "'/><span>" + row.MaThuoc + "</span></td><td><span>" + row.TenThuoc + "</span></td><td style='text-align:right'><input type='hidden' name='Items[" + index + "].SoLuongHeThong' value='" + row.SoLuong + "'/><span class='soluonghethong'>" + row.SoLuong + "</span><span> " + row.DonViXuatLe + "</span></td><td><input type='text' name='Items[" + index + "].SoLuongThucTe' class='form-control txt-soluongthucte'/></td><td><span class='chenhlech'></span></td><td><a class='delete-line text-warning' style='cursor: pointer; display: inline;'  title='Xóa'><i class='glyphicon glyphicon-remove'></i></a></td></tr>";
            if (jQuery('#tbl').find('tbody input[value=' + row.MaThuoc + ']').size() <= 0) {
                $('#tbl tbody').append(row);
            }
            $('.errorMessage').remove();

        }

        function BindAutocomplete(elem, sName) {
            var url = $('input[name=baseUrl]').val() + "Thuocs/GetThuocsByMaOrTen";
            if (sName == "maThuoc") {
                url = $('input[name=baseUrl]').val() + "Thuocs/GetThuocsByMa";
            }
            elem.autocomplete({
                minLength: 2,
                source: function (request, response) {
                    var term = request.term;
                    currentTerm = sName + term;
                    if (term in cache) {
                        response(cache[sName + term]);
                        return;
                    }
                    $.getJSON(url, request, function (data, status, xhr) {
                        cache[sName + term] = data;
                        response(data);
                    });
                },
                messages: {
                    noResults: "Không tìm thấy"//,
                    // results: ""
                },
                focus: function (event, ui) {
                    $("#Thuocs").val(ui.item.label);
                    return false;
                },
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    $('#txtByMa').val(ui.item.maThuoc);
                    $('#maThuoc').val(ui.item.maThuoc);
                    $('#txtByTen').val(ui.item.tenThuoc);
                    AddThuocs();
                    return false;
                }
            }).each(function () {
                $(this).autocomplete('instance')._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<a>" + item.desc + "</a>")
                        .append('<input type="hidden" name="price" value="' + item.price + '"/>')
                        .append('<input type="hidden" name="unit" value="' + item.unit + '"/>')
                        .appendTo(ul);
                };
            });
        }
        function BienDongTrongNgay()
        {
            var flag = $("#chkBienDong").is(':checked');
            var id = $("#MaPhieuKiemKe").val();
            var date = $("#NgayTao").val();
            if (flag) {
                var url = $('input[name=baseUrl]').val() + "Thuocs/GetThuocBienDongTrongNgay";
                $.get(url, { id: id, date: date }).done(function (data) {
                    if (data != "") {
                        $.each($('#tbl tbody tr'), function (index, val) {
                            $(this).hide();
                        });

                        $.each(data, function (index, val) {
                            $.each($('#tbl tbody tr'), function () {
                                if ($(this).find('input[value=' + val.MaThuoc + ']').size() > 0) {
                                    $(this).show();
                                }
                            });
                        });
                    }
                    else {
                        $.each($('#tbl tbody tr'), function (index, val) {
                            $(this).hide();
                        });
                    }
                });
            }
            else {
                $.each($('#tbl tbody tr'), function (index, val) {
                    $(this).show();
                });
            }
        }

        $("#dvNgayTao").on("click", function () {
            $("#NgayTao").datepicker("show");
        });

        $('#tbl').on('keydown', '.txt-soluongthucte', function (e) { -1 !== $.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) || /65|67|86|88/.test(e.keyCode) && (!0 === e.ctrlKey || !0 === e.metaKey) || 35 <= e.keyCode && 40 >= e.keyCode || (e.shiftKey || 48 > e.keyCode || 57 < e.keyCode) && (96 > e.keyCode || 105 < e.keyCode) && e.preventDefault() });

        //
        //Functions for scan barcode on mobile
        //
        //Functions for scan barcode on mobile
        function scan() {
            var href = window.location.href.split("\#")[0];
            window.addEventListener("storage", zxinglistener, false);
            zxingWindow = window.open("zxing://scan/?ret=" + encodeURIComponent(href + "#{CODE}"), '_self');

        };

        function zxinglistener(e) {
            localStorage["zxingbarcode"] = "";
            if (e.url.split("\#")[0] == window.location.href) {
                window.focus();
                processBarcode(decodeURIComponent(e.newValue));
            }
            window.removeEventListener("storage", zxinglistener, false);
        }
        if (window.location.hash != "") {
            localStorage["zxingbarcode"] = window.location.hash.substr(1);
            self.close();
            window.location.href = "about:blank";//In case self.close is disabled
        } else {
            window.addEventListener("hashchange", function (e) {
                window.removeEventListener("storage", zxinglistener, false);
                var hash = window.location.hash.substr(1);
                if (hash != "") {
                    window.location.hash = "";
                    processBarcode(decodeURIComponent(hash));
                }
            }, false);
        }

        function processBarcode(barcode) {
            if (barcode) {
                var url = $('input[name=baseUrl]').val() + "Thuocs/GetMaThuocsByBarcode";
                $.get(url, { barcode: barcode }).done(function (data) {
                    //alert(data);
                    $('select#MaNhomThuoc').find('option:first').prop('selected', 'selected');
                    $('#txtByMa').val(data);
                    $('#txtByTen').val('');
                    AddThuocs();
                });
            }
        }

    </script>
}
