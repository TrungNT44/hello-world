@using Med.Web.Extensions
@using sThuoc.Models
@using sThuoc.Filter
@using PagedList.Mvc;
@model PagedList.IPagedList<BacSy>

    @{
        ViewBag.Title = "Danh sách bác sỹ";
    }

    <h4><b>@ViewBag.Title</b></h4>
    @{
        var canCreate = FunctionsService.Authorize("BacSys", "Create", this.GetNhaThuoc());
        var canModify = FunctionsService.Authorize("BacSys", "Edit", this.GetNhaThuoc());
    }
    @using (Html.BeginForm("Index", "BacSys", FormMethod.Get))
    {
        <table class="table">
            <tr>
                <td>
                    @*Tên bác sỹ: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)&nbsp;<input type="submit" value="Tìm" class="btn btn-default" />
                    @if (canCreate)
                    {
                        @:&nbsp; &nbsp;<input type="button" class="btn btn-default" value="Thêm mới" onclick="location.href='@Url.Action("Create", "BacSys")'" />
                    }*@
                    <div class="input-group">
                        @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control", placeholder = "Tìm theo tên" })
                        <span class="input-group-btn">
                            <button class="btn btn-default btn-finduser" type="submit"><i class="fa fa-search fa-fw"></i></button>
                            <span class="btn-separator"></span>
                            @if (canCreate)
                            {
                                @Html.ActionLink("Thêm Mới", "Create", null, new { @class = "btn btn-primary" })
                            }
                        </span>
                    </div><!-- /input-group -->  
                </td>
            </tr>

        </table>
    }

    <table class="table table-striped">
        <tr>
            <th>
                #
            </th>

            <th>
                @Html.ActionLink("Bác sỹ", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].DienThoai)
            </th>

            @*<th>
                @Html.DisplayNameFor(model => model[0].DiaChi)
            </th>*@

            @if (canModify)
            {
                <th></th>
            }
        </tr>
        @{ var stt = 0;}
        @foreach (var item in Model)
        {
            stt++;
            <tr>
                <td>
                    @stt
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TenBacSy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DienThoai)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.DiaChi)
                </td>*@

                @if (canModify)
                {
                    <td style="text-align:right">
                        @*@Html.ActionLink("Sửa", "Edit", new { id = item.MaBacSy })
                        | @Html.ActionLink("Xóa", "Delete", new { id = item.MaBacSy })*@
                        <a href="@Url.Action("Edit", new { id = item.MaBacSy })"><i class="fa fa-pencil fa-fw"></i></a>
                        |
                        <a href="@Url.Action("Delete", new { id = item.MaBacSy })"><i class="fa fa-trash-o fa-fw"></i></a>  
                    </td>
                }
            </tr>
        }

    </table>
    <br />
    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) trong @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new
        {
            page,
            sortOrder = ViewBag.CurrentSort,
            currentFilter = ViewBag.CurrentFilter
        }))
@section Scripts{
<!-- language pack - MUST be included before the jqGrid javascript -->
<script type="text/javascript" src="../../Scripts/i18n/grid.locale-vi.js"></script>
<!-- the jqGrid javascript runtime -->
<script type="text/javascript" src="../../Scripts/jquery.jqGrid.min.js"></script>
<script>
    $(function () {
        $('#btnExport').click(function () {
            window.location = '/BacSys/ExportToExcel';
        });
    });
    //Upload the excel file
    $('.upload-form').on('submit', function (event) {
        var check = CheckFileName($(this));
        if (!check) {
            event.preventDefault();
        }
    });

    function OpenFileDialog() {
        $('input[name=uploadFile]').trigger('click');
    }

    $('input[name=uploadFile]').on('change', function () {
        $('.upload-form').trigger('submit');
    });
    function CheckFileName(el) {
        var fileName = el.find("input[name=uploadFile]").val();
        //debugger;
        var fileExtension = fileName.split(".");
        fileExtension = fileExtension[fileExtension.length - 1];
        if (fileName == "") {
            alert("Chưa chọn tệp tin Excel tải lên");
            return false;

        } else if (fileExtension.toUpperCase() == "XLS" || fileExtension.toUpperCase() == "XLSX")
            return true;
        else {
            alert("Tên file " + fileName.split(".")[1] + " không đúng. Cần tải file có đuôi xls/xlsx");
            return false;
        }
        return true;
    }
</script>
}